<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>r</string>
		<string>reb</string>
		<string>red</string>
		<string>reds</string>
		<string>topaz</string>
		<string>r3</string>
	</array>
	<key>firstLineMatch</key>
	<string>^(#![.]{0,2}(/[a-z0-9-_]+)*/r(eb|ed\b|en\b|3\b).*|(Rebol|REBOL|Red(/System)?|Topaz) \[)$</string>
	<key>injections</key>
	<dict>
		<key>string.quoted.double.rebol</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>&amp;amp;</string>
					<key>name</key>
					<string>constant.character.amp.rebol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-html</string>
				</dict>
			</array>
		</dict>
		<key>variable.other.setword.rebol</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=/)(\()</string>
					<key>end</key>
					<string>(\))(?=/)</string>
					<key>name</key>
					<string>meta.paren.path.rebol</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>keyEquivalent</key>
	<string>^R</string>
	<key>name</key>
	<string>Rebol</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#punctuation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type-literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#logic</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#values</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#words</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#errors</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>binary-base-sixteen</key>
		<dict>
			<key>begin</key>
			<string>(16)?#\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.quoted.other.base16.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[0-9a-fA-F]</string>
					<key>name</key>
					<string>constant.character.binary.rebol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#error-chars</string>
				</dict>
			</array>
		</dict>
		<key>binary-base-sixty-four</key>
		<dict>
			<key>begin</key>
			<string>64#\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.quoted.other.base64.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[0-9A-Za-z+/=]+</string>
					<key>name</key>
					<string>constant.character.binary.rebol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#error-chars</string>
				</dict>
			</array>
		</dict>
		<key>binary-base-two</key>
		<dict>
			<key>begin</key>
			<string>2#\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.quoted.other.base2.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[01]+</string>
					<key>name</key>
					<string>constant.character.binary.rebol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#error-chars</string>
				</dict>
			</array>
		</dict>
		<key>character</key>
		<dict>
			<key>match</key>
			<string>#"(\^(\(([0-9a-fA-F]{2,6}|[a-zA-Z]{3,6})\)|.)|[^\^\"])"</string>
			<key>name</key>
			<string>constant.other.character.rebol</string>
		</dict>
		<key>character-html</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.html</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
			<key>name</key>
			<string>constant.character.entity.html</string>
		</dict>
		<key>character-inline</key>
		<dict>
			<key>match</key>
			<string>\^(\([0-9a-fA-F]{2,4}\)|.)</string>
			<key>name</key>
			<string>constant.character.rebol</string>
		</dict>
		<key>comment-line</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.rebol</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(;)((?! %&gt;).)*($\n?|(?= %&gt;))</string>
			<key>name</key>
			<string>comment.line.semicolon.rebol</string>
		</dict>
		<key>comment-multiline-block</key>
		<dict>
			<key>begin</key>
			<string>comment\s*\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>comment.block.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-block-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-multiline-block-nested</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>comment.block.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-block-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-multiline-string</key>
		<dict>
			<key>begin</key>
			<string>comment\s*\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>comment.block.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-string-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-multiline-string-nested</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>comment.block.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-string-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-shebang</key>
		<dict>
			<key>match</key>
			<string>\A#![.]{0,2}/.*$</string>
			<key>name</key>
			<string>comment.line.shebang.rebol</string>
		</dict>
		<key>comment-tag</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=^|[\s\[(])&lt;!--</string>
			<key>end</key>
			<string>--&gt;</string>
			<key>name</key>
			<string>comment.block.tag.rebol</string>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-shebang</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-multiline-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-multiline-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-tag</string>
				</dict>
			</array>
		</dict>
		<key>embedded-html</key>
		<dict>
			<key>begin</key>
			<string>%&gt;</string>
			<key>end</key>
			<string>&lt;%(==?|!)?(?!&gt;)</string>
			<key>name</key>
			<string>source.html.embedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.html</string>
				</dict>
			</array>
		</dict>
		<key>error-chars</key>
		<dict>
			<key>match</key>
			<string>[^\n\t ]</string>
			<key>name</key>
			<string>invalid.illegal.char.rebol</string>
		</dict>
		<key>errors</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#error-chars</string>
				</dict>
			</array>
		</dict>
		<key>logic</key>
		<dict>
			<key>match</key>
			<string>(#\[(true|false|none)]|&gt;(true|false|none|0|1|_)&lt;)</string>
			<key>name</key>
			<string>constant.language.logic.rebol</string>
		</dict>
		<key>punct-block-begin</key>
		<dict>
			<key>match</key>
			<string>\[</string>
			<key>name</key>
			<string>punctuation.section.block.begin.rebol</string>
		</dict>
		<key>punct-block-end</key>
		<dict>
			<key>match</key>
			<string>\]</string>
			<key>name</key>
			<string>punctuation.section.block.end.rebol</string>
		</dict>
		<key>punct-group-begin</key>
		<dict>
			<key>match</key>
			<string>\(</string>
			<key>name</key>
			<string>punctuation.section.group.begin.rebol</string>
		</dict>
		<key>punct-group-end</key>
		<dict>
			<key>match</key>
			<string>\)</string>
			<key>name</key>
			<string>punctuation.section.group.end.rebol</string>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#punct-block-begin</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punct-block-end</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punct-group-begin</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punct-group-end</string>
				</dict>
			</array>
		</dict>
		<key>string-email</key>
		<dict>
			<key>match</key>
			<string>[^\s\n:/\[\]\(\)]+@[^\s\n:/\[\]\(\)]+</string>
			<key>name</key>
			<string>string.other.email.rebol</string>
		</dict>
		<key>string-file</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[(/])%[^\s\n\[\]\(\)]*</string>
			<key>name</key>
			<string>string.other.file.rebol</string>
		</dict>
		<key>string-file-quoted</key>
		<dict>
			<key>begin</key>
			<string>%"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.other.file.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>%[A-Fa-f0-9]{2}</string>
					<key>name</key>
					<string>constant.character.hex.rebol</string>
				</dict>
			</array>
		</dict>
		<key>string-issue</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[(/])#[^\s\n\[\]\(\)]*</string>
			<key>name</key>
			<string>string.other.issue.rebol</string>
		</dict>
		<key>string-multiline</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.multiline.begin.rebol</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.multiline.end.rebol</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.other.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-rsp-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-nested-multiline</string>
				</dict>
			</array>
		</dict>
		<key>string-nested-multiline</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.quoted.other.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-nested-multiline</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.double.begin.rebol</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.double.end.rebol</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=^|\s|\[|\()(")([^\n^"]|(\^([!"\-\/@A-Z\[\\\]\^_{}~]|\((line|tab|page|escape|esc|back|del|null
|[0-9A-F]{2,6})\))))*(")</string>
			<key>name</key>
			<string>string.quoted.double.rebol</string>
		</dict>
		<key>string-rsp-tag</key>
		<dict>
			<key>begin</key>
			<string>&lt;%(==?|:|!)?\s</string>
			<key>end</key>
			<string>\s%&gt;</string>
			<key>name</key>
			<string>source.rebol.embedded.block.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.rebol</string>
				</dict>
			</array>
		</dict>
		<key>string-tag</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=^|\s|\[|\(|\/)&lt;(?:\/|%={0,2}\ |\!)?(?:([_a-zA-Z0-9]+):)?([_a-zA-Z0-9:]+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.namespace.xml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?:\s/|\ %)?&gt;</string>
			<key>name</key>
			<string>meta.tag.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.namespace.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.xml</string>
						</dict>
					</dict>
					<key>match</key>
					<string> (?:([-_a-zA-Z0-9]+):)?([_a-zA-Z-]+)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-tag-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-tag-single-quoted</string>
				</dict>
			</array>
		</dict>
		<key>string-tag-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.xml</string>
		</dict>
		<key>string-tag-empty</key>
		<dict>
			<key>match</key>
			<string>&lt;/&gt;</string>
			<key>name</key>
			<string>meta.tag.rebol</string>
		</dict>
		<key>string-tag-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.xml</string>
		</dict>
		<key>string-url</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|\s|\[|\(|\/)[A-Za-z][\w-]{1,15}:(/{0,3}[^\s\[\]();]+|//)</string>
			<key>name</key>
			<string>string.other.url.rebol</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-multiline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-tag-empty</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-file-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-file</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-url</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-email</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#binary-base-two</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#binary-base-sixty-four</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#binary-base-sixteen</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-issue</string>
				</dict>
			</array>
		</dict>
		<key>type-literal</key>
		<dict>
			<key>begin</key>
			<string>#\[(?:(\w+!))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.datatype.rebol</string>
				</dict>
			</dict>
			<key>end</key>
			<string>]</string>
			<key>name</key>
			<string>meta.literal.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>value-date</key>
		<dict>
			<key>match</key>
			<string>\d{1,4}\-([Jj][Aa][Nn]([Uu][Aa][Rr][Yy])?|[Ff][Ee][Bb]([Rr][Uu][Aa][Rr][Yy])?|[Mm][Aa][Rr]([Cc][Hh])?|[Aa][Pp][Rr]([Ii][Ll])?|[Mm][Aa][Yy]|[Jj][Uu][Nn][Ee]?|[Jj][Uu][Ll][Yy]?|[Aa][Uu][Gg]([Uu][Ss][Tt])?|[Ss][Ee][Pp]([Tt][Ee][Mm][Bb][Ee][Rr])?|[Oo][Cc][Tt]([Oo][Bb][Ee][Rr])?|[Nn][Oo][Vv]([Ee][Mm][Bb][Ee][Rr])?|[Dd][Ee][Cc]([Ee][Mm][Bb][Ee][Rr])?|[1-9]|1[012])\-\d{1,4}(/\d\d?[:]\d\d?([:]\d\d?(\.\d{1,5})?)?([+-]\d\d?[:]\d\d?)?)?</string>
			<key>name</key>
			<string>constant.numeric.date.rebol</string>
		</dict>
		<key>value-money</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[(/])-?[a-zA-Z]*\$[0-9]+(\.[0-9]{2})?(?=[\s\[\](){";]|$)</string>
			<key>name</key>
			<string>constant.numeric.money.rebol</string>
		</dict>
		<key>value-number</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[(/])([-+]?((\d+[\d']*[.,]?[\d']*)|([.,]\d+[\d']*))((e|E)(\+|-)?\d+)?)(?=[\s()/\[\];]|$)</string>
			<key>name</key>
			<string>constant.numeric.rebol</string>
		</dict>
		<key>value-pair</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)[-+]?[[:digit:]]+[x][-+]?[[:digit:]]+(?=[\s\[\](){";]|$)</string>
			<key>name</key>
			<string>constant.numeric.pair.rebol</string>
		</dict>
		<key>value-time</key>
		<dict>
			<key>match</key>
			<string>([-+]?[:]\d{1,2}([aApP][Mm])?)|([-+]?[:]\d{1,2}[.]\d{0,9})|([-+]?\d{1,2}[:]\d{1,2}([aApP][Mm])?)|([-+]?\d{1,2}[:]\d{1,2}[.]\d{0,9})|([-+]?\d{1,2}[:]\d{1,2}[:]\d{1,2}([.]\d{0,9})?([aApP][Mm])?)(?=[\s\[\](){";]|$)</string>
			<key>name</key>
			<string>constant.numeric.time.rebol</string>
		</dict>
		<key>value-tuple</key>
		<dict>
			<key>match</key>
			<string>((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[.]){2,9}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[.]?(?=[\s\[\](){";]|$)</string>
			<key>name</key>
			<string>constant.numeric.tuple.rebol</string>
		</dict>
		<key>value-tuple-invalid</key>
		<dict>
			<key>match</key>
			<string>\d+\.(?:\d+\.)+\d*</string>
			<key>name</key>
			<string>invalid.illegal.tuple.rebol</string>
		</dict>
		<key>values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#value-date</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-time</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-tuple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-tuple-invalid</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-pair</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-money</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-number</string>
				</dict>
			</array>
		</dict>
		<key>word</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s(/\[])[A-Za-z!\&amp;\*\+\-.=\?^_`|~][!&amp;'*+\-.0-9=?a-zA-Z^_`|~]*(?=[\s()/;\[\]]|$)</string>
			<key>name</key>
			<string>variable.other.word.rebol</string>
		</dict>
		<key>word-as-was</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[(/])[A-Za-z!&amp;\*\+\-.=?^_`|~][A-Za-z0-9=\-!|?_\*+.`~\&amp;]*(/\d+)*(/(?=[A-Za-z=\-?!_\*\+.`~\&amp;\(:'%])|(?=[\s\[\](){";]|$))</string>
			<key>name</key>
			<string>variable.other.word.rebol</string>
		</dict>
		<key>word-get</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s(/\[]):[A-Za-z!\&amp;\*\+\-.=\?^_`|~][!&amp;'*+\-.0-9=?a-zA-Z^_`|~]*(/([A-Za-z=\-\?!_\*\+.`~\&amp;][A-Za-z0-9=\-!|\?_\*\+.`~\&amp;]*|\d+)*)*(?=[\s()/;\[\]]|$)</string>
			<key>name</key>
			<string>variable.other.getword.rebol</string>
		</dict>
		<key>word-lit</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s(/\[])'[A-Za-z!\&amp;\*\+\-.=\?^_`|~][!&amp;'*+\-.0-9=?a-zA-Z^_`|~]*(/([A-Za-z=\-\?!_\*\+.`~\&amp;][A-Za-z0-9=\-!|\?_\*\+.`~\&amp;]*|\d+))*(?=[\s()/;\[\]]|$)</string>
			<key>name</key>
			<string>variable.other.litword.rebol</string>
		</dict>
		<key>word-parse</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[])(thru|some|opt|end)(?=[\s\[\](;]|$)</string>
			<key>name</key>
			<string>keyword.control.parse.rebol</string>
		</dict>
		<key>word-path</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=[A-Za-z0-9=\-!|\?_\*\+.`~\&amp;\)])/(?=[A-Za-z=\-\?!_\*\+.`~\&amp;:0-9\(])</string>
			<key>name</key>
			<string>punctuation.separator.path.rebol</string>
		</dict>
		<key>word-refine</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\](])/[A-Za-z!\&amp;\*.=\?^_`|~][!&amp;'*+\-.0-9=?a-zA-Z^_`|~]*(?=[\s();\[\]]|$)</string>
			<key>name</key>
			<string>variable.other.word.refinement.rebol</string>
		</dict>
		<key>word-set</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s(/\[])[A-Za-z!\&amp;\*\+\-.=\?^_`|~][!&amp;'*+\-.0-9=?a-zA-Z^_`|~]*(/(\:?[A-Za-z=\-\?!_\*\+.`~\&amp;][!&amp;'*+\-.0-9=?a-zA-Z^_`|~]*|\d+|\(.*\)(?=[/:]))+)*:(?=[\s()/;\[\]]|$)</string>
			<key>name</key>
			<string>variable.other.setword.rebol</string>
		</dict>
		<key>words</key>
		<dict>
			<key>name</key>
			<string>meta.word.rebol</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#words-datatype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#words-header</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#words-native</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#words-native-to-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#words-infix</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#words-logic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#words-qm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-set</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-get</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-lit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-refine</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-path</string>
				</dict>
			</array>
		</dict>
		<key>words-datatype</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\(])(end\!|unset\!|error\!|datatype\!|context\!|native\!|action\!|routine\!|op\!|function\!|object\!|struct\!|library\!|port\!|any-type\!|any-word\!|any-function\!|number\!|series\!|any-string\!|any-block\!|symbol\!|word\!|set-word\!|get-word\!|lit-word\!|refinement\!|none\!|logic\!|integer\!|decimal\!|money\!|time\!|date\!|char\!|pair\!|event\!|tuple\!|bitset\!|string\!|issue\!|binary\!|file\!|email\!|url\!|image\!|tag\!|block\!|paren\!|path\!|set-path\!|lit-path\!|hash\!|list\!)(?=[\s\[\](){";]|$)</string>
			<key>name</key>
			<string>keyword.control.datatype.rebol</string>
		</dict>
		<key>words-header</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^\[|^)(Boron|REBOL|Rebol|Red(/System)?|Topaz|World)(?=\s*\[)</string>
			<key>name</key>
			<string>keyword.control.header.rebol</string>
		</dict>
		<key>words-infix</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()/])(\+\+?|--?|\*\*?|//?|=|&gt;=?|&lt;(=|&gt;|-)?)(?=[\s\[\](){";]|$)</string>
			<key>name</key>
			<string>keyword.control.native.rebol</string>
		</dict>
		<key>words-logic</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()])(true|yes|false|off|none|no)(?=[\s\[\](){";]|$)</string>
			<key>name</key>
			<string>constant.language.logic.rebol</string>
		</dict>
		<key>words-native</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()])(about|abs|absolute|action\?|add|alert|alias|all|alter|and~|and|any|any-block\?|any-function\?|any-string\?|any-type\?|any-word\?|append|arccosine|arcsine|arctangent|array|ask|at|back|binary\?|bind|bitset\?|block\?|body-of|boot-prefs|break|browse|build-tag|call|caret-to-offset|case|catch|center-face|change|change-dir|char\?|charset|checksum|choose|clean-path|clear|clear-fields|close|closure|collect|comment|complement|compose|compress|confine|confirm|connected\?|context|continue-post|copy|cosine|cp|crypt-strength\?|cvs-date|cvs-version|datatype\?|date\?|debase|decimal\?|decode-cgi|decode-url|decompress|deflag-face|dehex|delete|demo|desktop|detab|dh-compute-key|dh-generate-key|dh-make-key|difference|dir\?|dirize|disarm|dispatch|divide|do|do-boot|do-events|do-face|do-face-alt|does|dsa-generate-key|dsa-make-key|dsa-make-signature|dsa-verify-signature|dump-face|dump-pane|echo|editor|either|else|email\?|emailer|empty\?|enbase|entab|equal\?|error\?|even\?|event\?|exclude|exists-thru\?|exists\?|exit|exp|extract|fifth|file\?|find|find-key-face|find-window|first|flag-face|flag-face\?|flash|focus|for|forall|foreach|forever|form|forskip|found\?|fourth|free|func|function\??|get|get-env|get-modes|get-net-info|get-style|get-word\?|greater-or-equal\?|greater\?|halt|has|hash\?|head\??|help|hide|hide-popup|if|image\?|import-email|in|in-window\?|index\?|info\?|inform|input|input\?|insert|insert-event-func|inside\?|integer\?|intersect|issue\?|join|keep|last|launch|launch-thru|layout|length\?|lesser-or-equal\?|lesser\?|library\?|link-app\?|link\?|list-dir|list\?|lit-path\?|lit-word\?|load|load-image|load-prefs|load-thru|log-10|log-2|log-e|logic\?|loop|lowercase|make|make-dir|make-face|max|maximum|maximum-of|min|minimum|minimum-of|modified\?|mold|money\?|multiply|native\?|negate|negative\?|net-error|next|none\?|not|not-equal\?|now|number\?|object\?|odd\?|offset-to-caret|offset\?|op\?|open|open-events|or|or~|outside\?|pair\?|paren\?|parse|parse-email-addrs|parse-header|parse-header-date|parse-xml|path-thru|path\?|pick|poke|port\?|positive\?|power|prin|print|probe|protect|protect-system|q|query|quit|random|read|read-io|read-net|read-thru|reboot|recycle|reduce|refinement\?|reform|rejoin|remainder|remold|remove|remove-event-func|rename|repeat|repend|replace|request|request-color|request-date|request-download|request-file|request-list|request-pass|request-text|resend|return|reverse|routine\?|rsa-encrypt|rsa-generate-key|rsa-make-key|same\?|save|save-prefs|save-user|screen-offset\?|script\?|scroll-para|second|secure|select|send|series\?|set|set-env|set-font|set-modes|set-net|set-para|set-path\?|set-style|set-user|set-user-name|set-word\?|show|show-popup|sine|size-text|size\?|skip|sort|source|span\?|spec-of|split-path|square-root|strict-equal\?|strict-not-equal\?|string\?|struct\?|stylize|subtract|switch|tag\?|tail\??|take|tangent|textinfo|third|throw|throw-on-error|time\?|title-of|to|to-local-file|to-rebol-file|trace|trim|try|tuple\?|types-of|type\?|unfocus|uninstall|union|unique|unless|unprotect|unset|unset\?|until|unview|update|upgrade|uppercase|url\?|usage|use|values-of|value\?|vbug|view|view-install|view-prefs|view\?|viewed\?|wait|what|what-dir|while|win-offset\?|within\?|words-of|word\?|write|write-io|write-user|xor|xor~|zero\?|/local|thru|end)(/(?=[a-z])|(?=[\s\[\](){]|$))</string>
			<key>name</key>
			<string>keyword.control.native.rebol</string>
		</dict>
		<key>words-native-to-type</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s(/\[])to-(binary|bitset|block|char|date|decimal|email|event|file|get-word|hash|hex|idate|image|integer|issue|list|lit-path|lit-word|logic|money|none|pair|paren|path|refinement|set-path|set-word|string|tag|time|tuple|url|word)(?=[\s\[\]();]|$)</string>
			<key>name</key>
			<string>keyword.control.to-type.rebol</string>
		</dict>
		<key>words-qm</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[(])(qm|route|render|redirect-to|publish|response|as|validate|verify|get-param|get-cookie|set-cookie|require)(/(?=[A-Za-z=\-\?\!\_\*\+\.`~\&amp;])|(?=[\s\[\](){";]|$))</string>
			<key>name</key>
			<string>keyword.control.qm.rebol</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.rebol</string>
	<key>shellVariables</key>
	<array>
		<dict>
			<key>name</key>
			<string>TM_COMMENT_START</string>
			<key>value</key>
			<string>; </string>
		</dict>
	</array>
	<key>uuid</key>
	<string>6BE0E13B-C4DD-478F-953A-2D84DBBCA2BA</string>
</dict>
</plist>
